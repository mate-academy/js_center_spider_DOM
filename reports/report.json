{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2023-11-15T14:13:52.134Z",
    "end": "2023-11-15T14:13:53.302Z",
    "duration": 1143,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1c57006e-dd14-42bb-88b3-922451efcee1",
      "title": "",
      "fullFile": "cypress\\integration\\centerSpider.spec.js",
      "file": "cypress\\integration\\centerSpider.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0183270b-745a-46f5-9b7a-8592cf9841f7",
          "title": "Spider application",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should center the spider by left border",
              "fullTitle": "Spider application should center the spider by left border",
              "timedOut": null,
              "duration": 1131,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.wall').then(function ($wall) {\n  cy.get('.spider').should(function ($spider) {\n    var spiderLeft = $spider.offset().left;\n    var expectedLeft = $wall.innerWidth() / 2 + ($wall.offset().left + 10) - $spider.width() / 2;\n    expect(spiderLeft).to.equal(expectedLeft);\n  });\n});",
              "err": {},
              "uuid": "9648b182-2632-4a85-8aa5-4c9bc5009ba8",
              "parentUUID": "0183270b-745a-46f5-9b7a-8592cf9841f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should center the spider by top border",
              "fullTitle": "Spider application should center the spider by top border",
              "timedOut": null,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.wall').then(function ($wall) {\n  cy.get('.spider').should(function ($spider) {\n    var spiderTop = $spider.offset().top;\n    var expectedTopAbs = $wall.innerHeight() / 2 + ($wall.offset().top + 10) - $spider.height() / 2;\n    expect(spiderTop).to.equal(expectedTopAbs);\n  });\n});",
              "err": {},
              "uuid": "b991a2ec-c741-43e8-8643-38125847fd32",
              "parentUUID": "0183270b-745a-46f5-9b7a-8592cf9841f7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9648b182-2632-4a85-8aa5-4c9bc5009ba8",
            "b991a2ec-c741-43e8-8643-38125847fd32"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1143,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportDir": "raw_reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}