{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2021-01-05T15:59:23.725Z",
    "end": "2021-01-05T15:59:25.164Z",
    "duration": 1401,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ca61e9a4-b930-4cf9-a2ed-2a1cfdef3f6c",
      "title": "",
      "fullFile": "cypress/integration/centerSpider.spec.js",
      "file": "cypress/integration/centerSpider.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "00b975e1-2c29-4d25-8fb2-d745adffccbc",
          "title": "Spider application",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should center the spider by left border",
              "fullTitle": "Spider application should center the spider by left border",
              "timedOut": null,
              "duration": 1376,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.wall').then(function ($wall) {\n  cy.get('.spider').should(function ($spider) {\n    var spiderLeft = $spider.offset().left;\n    var expectedLeft = $wall.innerWidth() / 2 + ($wall.offset().left + 10) - $spider.width() / 2;\n    expect(spiderLeft).to.equal(expectedLeft);\n  });\n});",
              "err": {},
              "uuid": "4e4fc3f3-f96c-4f50-bd0e-31dac2230ba5",
              "parentUUID": "00b975e1-2c29-4d25-8fb2-d745adffccbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should center the spider by top border",
              "fullTitle": "Spider application should center the spider by top border",
              "timedOut": null,
              "duration": 25,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.wall').then(function ($wall) {\n  cy.get('.spider').should(function ($spider) {\n    var spiderTop = $spider.offset().top;\n    var expectedTopAbs = $wall.innerHeight() / 2 + ($wall.offset().top + 10) - $spider.height() / 2;\n    expect(spiderTop).to.equal(expectedTopAbs);\n  });\n});",
              "err": {},
              "uuid": "a3a0dcdd-daa9-4503-9c45-b67b5dbe987f",
              "parentUUID": "00b975e1-2c29-4d25-8fb2-d745adffccbc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4e4fc3f3-f96c-4f50-bd0e-31dac2230ba5",
            "a3a0dcdd-daa9-4503-9c45-b67b5dbe987f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1401,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportDir": "raw_reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}